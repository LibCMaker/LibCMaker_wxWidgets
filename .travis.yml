# === Common ===

sudo: false

language: cpp

env:
  global:
    # NOTE: LibCMaker lib name.
    # NOTE: See below the lib deps in 'before_install' for every target OS.
    - cmr_LIB_NAME=wxWidgets
    - cmr_BUILD_TESTING=ON

    - cmr_WORK_DIR=${HOME}
    - cmr_REPO_DIR=${HOME}/build/LibCMaker/LibCMaker_${cmr_LIB_NAME}
    - cmr_SAMPLE_SRC_DIR=${cmr_REPO_DIR}/samples/TestCompileWith${cmr_LIB_NAME}
    - cmr_SAMPLE_DIR=${cmr_WORK_DIR}/TestCompileWith${cmr_LIB_NAME}
    - cmr_SAMPLE_LIB_DIR=${cmr_SAMPLE_DIR}/libs

    - cmr_BUILD_DIR=${cmr_SAMPLE_DIR}/build
    - cmr_INSTALL_DIR=${cmr_BUILD_DIR}/install
    - cmr_DOWNLOAD_DIR=${cmr_BUILD_DIR}/download

    - cmr_JOBS_CNT=4


# === Linux ===

build_linux: &build_linux
  stage: Test
  os: linux
  dist: xenial
  addons:
    apt:
      packages:
#        - libgtk-3-dev  # Only with GTK3. Do not include it for GTK2.
        - libgtk2.0-dev
#        - libgstreamermm-1.0-dev
##        - libgstreamermm-0.10-dev  # Does not exist in Xenial.
#        - libgstreamer1.0-dev
#        - libgstreamer-plugins-base1.0-dev
#        - libgstreamer0.10-dev
#        - libgstreamer-plugins-base0.10-dev
#        - libwebkitgtk-dev
#        - libglu1-mesa-dev
#        - libsecret-1-dev
#        - libnotify-dev

  env: &build_linux_env
    - cmr_TARGET_OS=linux
    - cmr_JOBS="-j${cmr_JOBS_CNT}"

    - cmr_CMAKE_RELEASE=cmake-3.4.0-Linux-x86_64
    - cmr_CMAKE_DIR=${cmr_INSTALL_DIR}/${cmr_CMAKE_RELEASE}
    - cmr_CMAKE_CMD=${cmr_CMAKE_DIR}/bin/cmake
    - cmr_CTEST_CMD=${cmr_CMAKE_DIR}/bin/ctest

  before_install:
    - cp -r ${cmr_SAMPLE_SRC_DIR} ${cmr_WORK_DIR}
    - mkdir ${cmr_SAMPLE_LIB_DIR}
    - cp -r ${cmr_REPO_DIR} ${cmr_SAMPLE_LIB_DIR}

    - mkdir ${cmr_BUILD_DIR}
    - mkdir ${cmr_INSTALL_DIR}
    - mkdir ${cmr_DOWNLOAD_DIR}

    - wget -nv -c -N -P ${cmr_DOWNLOAD_DIR} https://cmake.org/files/v3.4/${cmr_CMAKE_RELEASE}.tar.gz
    - tar -xf ${cmr_DOWNLOAD_DIR}/${cmr_CMAKE_RELEASE}.tar.gz --directory ${cmr_INSTALL_DIR}

    # NOTE: LibCMaker lib deps.
    - git clone https://github.com/LibCMaker/LibCMaker.git ${cmr_SAMPLE_LIB_DIR}/LibCMaker
    - git clone https://github.com/LibCMaker/LibCMaker_GoogleTest.git ${cmr_SAMPLE_LIB_DIR}/LibCMaker_GoogleTest


  script:
    - cd ${cmr_BUILD_DIR}

    - ${cmr_CMAKE_CMD} ${cmr_SAMPLE_DIR}
        -Dcmr_BUILD_MULTIPROC_CNT=${cmr_JOBS_CNT}
        -Dcmr_PRINT_DEBUG=ON
        -DCMAKE_VERBOSE_MAKEFILE=ON
        -DCMAKE_COLOR_MAKEFILE=ON
        -DBUILD_TESTING=${cmr_BUILD_TESTING}
        -DCMAKE_INSTALL_PREFIX=${cmr_INSTALL_DIR}
        -Dcmr_DOWNLOAD_DIR=${cmr_DOWNLOAD_DIR}
        -Dcmr_UNPACKED_DIR=${cmr_DOWNLOAD_DIR}/unpacked
          -DCMAKE_BUILD_TYPE=${cmr_CMAKE_BUILD_TYPE}
          -DBUILD_SHARED_LIBS=${cmr_BUILD_SHARED_LIBS}

    - ${cmr_CMAKE_CMD} --build . -- ${cmr_JOBS}

    - ${cmr_CTEST_CMD} --output-on-failure


build_linux_gcc: &build_linux_gcc
  <<: *build_linux
  compiler: gcc


build_linux_clang: &build_linux_clang
  <<: *build_linux
  compiler: clang


# === Windows ===

build_windows: &build_windows
  stage: Test
  os: windows
  env: &build_windows_env
    - cmr_TARGET_OS=windows

    - cmr_CMAKE_RELEASE=cmake-3.11.0-win64-x64
    - cmr_CMAKE_DIR=${cmr_INSTALL_DIR}/${cmr_CMAKE_RELEASE}
    - cmr_CMAKE_CMD=${cmr_CMAKE_DIR}/bin/cmake
    - cmr_CTEST_CMD=${cmr_CMAKE_DIR}/bin/ctest

    - cmr_CMAKE_BUILD_TYPE=Release

    - cmr_ATTACH_WX_CONSOLE=ON

    - PATH=${cmr_INSTALL_DIR}/lib/vc_x64_dll:${cmr_INSTALL_DIR}/bin:${PATH}

  before_install:
    - cp -r ${cmr_SAMPLE_SRC_DIR} ${cmr_WORK_DIR}
    - mkdir ${cmr_SAMPLE_LIB_DIR}
    - cp -r ${cmr_REPO_DIR} ${cmr_SAMPLE_LIB_DIR}

    - mkdir ${cmr_BUILD_DIR}
    - mkdir ${cmr_INSTALL_DIR}
    - mkdir ${cmr_DOWNLOAD_DIR}

    - wget -nv -c -N -P ${cmr_DOWNLOAD_DIR} https://cmake.org/files/v3.11/${cmr_CMAKE_RELEASE}.zip
    - 7z.exe x -aoa -o${cmr_INSTALL_DIR} ${cmr_DOWNLOAD_DIR}/${cmr_CMAKE_RELEASE}.zip

    # NOTE: LibCMaker lib deps.
    - git clone https://github.com/LibCMaker/LibCMaker.git ${cmr_SAMPLE_LIB_DIR}/LibCMaker
    - git clone https://github.com/LibCMaker/LibCMaker_GoogleTest.git ${cmr_SAMPLE_LIB_DIR}/LibCMaker_GoogleTest

  script:
    - cd ${cmr_BUILD_DIR}

    - ${cmr_CMAKE_CMD} ${cmr_SAMPLE_DIR}
        -Dcmr_BUILD_MULTIPROC_CNT=${cmr_JOBS_CNT}
        -Dcmr_PRINT_DEBUG=ON
        -DCMAKE_VERBOSE_MAKEFILE=ON
        -DCMAKE_COLOR_MAKEFILE=ON
        -DBUILD_TESTING=${cmr_BUILD_TESTING}
        -DCMAKE_INSTALL_PREFIX=${cmr_INSTALL_DIR}
        -Dcmr_DOWNLOAD_DIR=${cmr_DOWNLOAD_DIR}
        -Dcmr_UNPACKED_DIR=${cmr_DOWNLOAD_DIR}/unpacked
          -DCMAKE_BUILD_TYPE=${cmr_CMAKE_BUILD_TYPE}
          -DBUILD_SHARED_LIBS=${cmr_BUILD_SHARED_LIBS}
        -DCMAKE_GENERATOR="${cmr_CMAKE_GENERATOR}"
          -DCMAKE_GENERATOR_PLATFORM="${cmr_CMAKE_GENERATOR_PLATFORM}"
          -DCMAKE_GENERATOR_TOOLSET="${cmr_CMAKE_GENERATOR_TOOLSET}"
          -DCMAKE_CONFIGURATION_TYPES=${cmr_CMAKE_BUILD_TYPE}
        -DATTACH_WX_CONSOLE=${cmr_ATTACH_WX_CONSOLE}

    - ${cmr_CMAKE_CMD} --build . --config ${cmr_CMAKE_BUILD_TYPE}

    - ${cmr_CTEST_CMD} --output-on-failure --build-config ${cmr_CMAKE_BUILD_TYPE}


build_windows_msvc: &build_windows_msvc
  <<: *build_windows
  env: &build_windows_msvc_env
    - *build_windows_env
    - cmr_CMAKE_GENERATOR="Visual Studio 15 2017"


build_windows_msvc_x64: &build_windows_msvc_x64
  <<: *build_windows_msvc
  env: &build_windows_msvc_x64_env
    - *build_windows_msvc_env
    - cmr_CMAKE_GENERATOR_PLATFORM="x64"
    - cmr_CMAKE_GENERATOR_TOOLSET="v141,host=x64"


build_windows_msvc_x32: &build_windows_msvc_x32
  <<: *build_windows_msvc
  env: &build_windows_msvc_x32_env
    - *build_windows_msvc_env
    - cmr_CMAKE_GENERATOR_PLATFORM="Win32"
    - cmr_CMAKE_GENERATOR_TOOLSET="v141,host=x64"


build_windows_msvc_winxp: &build_windows_msvc_winxp
  <<: *build_windows_msvc
  env: &build_windows_msvc_winxp_env
    - *build_windows_msvc_env
    - cmr_CMAKE_GENERATOR_PLATFORM="Win32"
    - cmr_CMAKE_GENERATOR_TOOLSET="v141_xp,host=x64"


# === Build matrix ===

jobs:
  include:

# Linux, gcc
    - <<: *build_linux_gcc
      name: "Linux, gcc, debug, shared"
      env:
        - *build_linux_env
        - cmr_CMAKE_BUILD_TYPE=Debug
        - cmr_BUILD_SHARED_LIBS=ON

    - <<: *build_linux_gcc
      name: "Linux, gcc, debug, static"
      env:
        - *build_linux_env
        - cmr_CMAKE_BUILD_TYPE=Debug
        - cmr_BUILD_SHARED_LIBS=OFF

    - <<: *build_linux_gcc
      name: "Linux, gcc, release, shared"
      env:
        - *build_linux_env
        - cmr_CMAKE_BUILD_TYPE=Release
        - cmr_BUILD_SHARED_LIBS=ON

    - <<: *build_linux_gcc
      name: "Linux, gcc, release, static"
      env:
        - *build_linux_env
        - cmr_CMAKE_BUILD_TYPE=Release
        - cmr_BUILD_SHARED_LIBS=OFF

# Linux, clang
    - <<: *build_linux_clang
      name: "Linux, clang, debug, shared"
      env:
        - *build_linux_env
        - cmr_CMAKE_BUILD_TYPE=Debug
        - cmr_BUILD_SHARED_LIBS=ON

    - <<: *build_linux_clang
      name: "Linux, clang, debug, static"
      env:
        - *build_linux_env
        - cmr_CMAKE_BUILD_TYPE=Debug
        - cmr_BUILD_SHARED_LIBS=OFF

    - <<: *build_linux_clang
      name: "Linux, clang, release, shared"
      env:
        - *build_linux_env
        - cmr_CMAKE_BUILD_TYPE=Release
        - cmr_BUILD_SHARED_LIBS=ON

    - <<: *build_linux_clang
      name: "Linux, clang, release, static"
      env:
        - *build_linux_env
        - cmr_CMAKE_BUILD_TYPE=Release
        - cmr_BUILD_SHARED_LIBS=OFF

# Windows, msvc
    - <<: *build_windows_msvc_x64
      name: "Windows, msvc, x64, shared"
      if: branch = do_not_build_with_travis_ci
      env:
        - *build_windows_msvc_x64_env
        - cmr_BUILD_SHARED_LIBS=ON

    - <<: *build_windows_msvc_x64
      name: "Windows, msvc, x64, static"
      if: branch = do_not_build_with_travis_ci
      env:
        - *build_windows_msvc_x64_env
        - cmr_BUILD_SHARED_LIBS=OFF

    - <<: *build_windows_msvc_x32
      name: "Windows, msvc, x32, shared"
      if: branch = do_not_build_with_travis_ci
      env:
        - *build_windows_msvc_x32_env
        - cmr_BUILD_SHARED_LIBS=ON

    - <<: *build_windows_msvc_x32
      name: "Windows, msvc, x32, static"
      if: branch = do_not_build_with_travis_ci
      env:
        - *build_windows_msvc_x32_env
        - cmr_BUILD_SHARED_LIBS=OFF

    - <<: *build_windows_msvc_winxp
      name: "Windows, msvc, winxp, shared"
      if: branch = do_not_build_with_travis_ci
      env:
        - *build_windows_msvc_winxp_env
        - cmr_BUILD_SHARED_LIBS=ON

    - <<: *build_windows_msvc_winxp
      name: "Windows, msvc, winxp, static"
      if: branch = do_not_build_with_travis_ci
      env:
        - *build_windows_msvc_winxp_env
        - cmr_BUILD_SHARED_LIBS=OFF


notifications:
  email:
    recipients:
      - nfeodonit@yandex.com
    on_success: always
    on_failure: always
